{"ast":null,"code":"var _jsxFileName = \"/home/ashish/Desktop/ddd/src/component/Game.js\";\nimport React, { useState } from \"react\";\nimport { calculateWinner } from \"../helper\";\nimport Board from \"./Board\";\nimport { Winnerplayer } from \"./Timer\";\nimport Timer from \"./Timer\"; // {\n//   console.log(Winnerplayer, \"winner of game\");\n// }\n\nconst Game = () => {\n  const [player1, setPlayer1] = useState(\"Player1\");\n  const [player2, setPlayer2] = useState(\"Player2\");\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXisNext] = useState(true);\n  console.log(xIsNext, \"next value fnhajadan\");\n  const winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const boardCopy = [...board]; // If user click an occupied square or if game is won, return\n\n    if (winner || boardCopy[i]) return; // Put an X or an O in the clicked square\n\n    boardCopy[i] = xIsNext ? \"X\" : \"O\";\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n\n  const renderMoves = () => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-btn\",\n    onClick: () => window.location.reload() && setBoard(Array(9).fill(null)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"Start Game\");\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box grid-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: xIsNext ? \"player-name\" : \"\",\n    contenteditable: \"true\",\n    onChange: e => {\n      setPlayer1(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, !winner ? player1 : player1 && winner ? \"Winner: \" + winner : \"Player1\" + (xIsNext ? \"X\" : \"O\"), xIsNext ? /*#__PURE__*/React.createElement(Timer, {\n    seconds: 5,\n    player: \"first\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }\n  }) : null)), renderMoves(), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: xIsNext ? \"\" : \"player-name\",\n    contenteditable: \"true\",\n    onChange: e => {\n      setPlayer2(e.target.value);\n    },\n    placeholder: \"Enter Player2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, winner ? player2 : player2, xIsNext ? null : /*#__PURE__*/React.createElement(Timer, {\n    seconds: 5,\n    player: \"second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 31\n    }\n  })))), /*#__PURE__*/React.createElement(Board, {\n    squares: board,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"winner-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, winner ? \"Winner player: \" + winner : \"show winner\"));\n};\n\nexport default Game;","map":{"version":3,"sources":["/home/ashish/Desktop/ddd/src/component/Game.js"],"names":["React","useState","calculateWinner","Board","Winnerplayer","Timer","Game","player1","setPlayer1","player2","setPlayer2","board","setBoard","Array","fill","xIsNext","setXisNext","console","log","winner","handleClick","i","boardCopy","renderMoves","window","location","reload","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { calculateWinner } from \"../helper\";\nimport Board from \"./Board\";\nimport { Winnerplayer } from \"./Timer\";\n\nimport Timer from \"./Timer\";\n// {\n//   console.log(Winnerplayer, \"winner of game\");\n// }\n\nconst Game = () => {\n  const [player1, setPlayer1] = useState(\"Player1\");\n  const [player2, setPlayer2] = useState(\"Player2\");\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXisNext] = useState(true);\n  console.log(xIsNext, \"next value fnhajadan\");\n\n  const winner = calculateWinner(board);\n  const handleClick = (i) => {\n    const boardCopy = [...board];\n    // If user click an occupied square or if game is won, return\n    if (winner || boardCopy[i]) return;\n    // Put an X or an O in the clicked square\n    boardCopy[i] = xIsNext ? \"X\" : \"O\";\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n\n  const renderMoves = () => (\n    <button\n      className=\"start-btn\"\n      onClick={() => window.location.reload() && setBoard(Array(9).fill(null))}\n    >\n      Start Game\n    </button>\n  );\n  return (\n    <>\n      <div className=\"box grid-col\">\n        <div>\n          <p\n            className={xIsNext ? \"player-name\" : \"\"}\n            contenteditable=\"true\"\n            onChange={(e) => {\n              setPlayer1(e.target.value);\n            }}\n          >\n            {!winner\n              ? player1\n              : player1 && winner\n              ? \"Winner: \" + winner\n              : \"Player1\" + (xIsNext ? \"X\" : \"O\")}\n            {xIsNext ? <Timer seconds={5} player=\"first\" /> : null}\n          </p>\n        </div>\n        {renderMoves()}\n        <div>\n          <p\n            className={xIsNext ? \"\" : \"player-name\"}\n            contenteditable=\"true\"\n            onChange={(e) => {\n              setPlayer2(e.target.value);\n            }}\n            placeholder=\"Enter Player2\"\n          >\n            {winner ? player2 : player2}\n            {xIsNext ? null : <Timer seconds={5} player=\"second\" />}\n          </p>\n        </div>\n      </div>\n      <Board squares={board} onClick={handleClick} />\n\n      <div className=\"winner-name\">\n        {winner ? \"Winner player: \" + winner : \"show winner\"}\n      </div>\n    </>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}